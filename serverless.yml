service : dynamodb-crud-api

provider:
  name: aws
  runtime : nodejs14.x
  stage: dev
  region: us-east-1
  environment:
  DYNAMODB_TABLE_NAME : ${self:custom.postsTableName}

custom:
  postsTableName: posts-table-${self:provider.stage}
plugins:
  -serverless-iam-roles-per-function

functions:
getPost:
  handler: api.getPost
  name: get-post
  memorySize: 128 #mb
  timeout: 5 #sec
  events:
    - http:
        path: post/{postId}
        method: GET
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        Resource: !GetAtt PostsTable.Arn

createPost:
  handler: api.createPost
  name: create-post
  memorySize: 128 # mb
  timeout: 5 # sec
  events:
    - http :
        path: post
        method: post
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource: !GetAtt PostsTable.Arn

updatePost:
  handler: api.updatePost
  name: update-post
  memorysize: 128 #mb
  timeout : 5 # sec
  events:
    - http:
        path: post/{postId}
        method: PUT
  iamRoleStatements:
    -Effect: "Allow"
     Action:
      - "dynamodb:UpdateItem"
     Resource: !GetAtt Poststable.Arn

deletepost:
  handler: api.deletePost
  name: delete-post
  memorySize: 128 # mb
  timeout : 5 #sec
  events:
    - http:
       path : post/{postId}
       method: DELETE
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - "dynamodb.DeleteItem"
      Resource: ! GetAtt PostsTable.Arn

getAllPosts:
  handler: api.getAllposts
  name: get-all-posts
  memorySize: 128 #mb
  timeout: 5 #sec
  events:
    - http :
        path: posts
        method: GET
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb.Scan"
      Resource: !GetAtt PostsTable.Arn

resources:
  Resources:
    poststable:
      Type: AWS:DynamoDB:Table
      Properties:
        tablename: ${self:custom.PostsTablename}
        AttributeDefinitions:
          - Attributename: postID
            AttributeType: S
        keySchema:
          - Attributename: PostId
            keyType: HASH
        provisionedThroughput:
          readCapacityunits: 1
          WriteCapacityUnits: 1



